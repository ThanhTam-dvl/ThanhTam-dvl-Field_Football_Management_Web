📋 TÓM TẮT DỰ ÁN WEBSITE QUẢN LÝ SÂN BÓNG (SAU REFACTOR)
🎯 MỤC TIÊU DỰ ÁN
Website đặt sân bóng và quản lý sân bóng với 2 phía:

Khách hàng: Đặt sân, tìm kèo, ghép đội
Admin: Quản lý sân, duyệt booking, thống kê doanh thu

🛠 CÔNG NGHỆ

Backend: Node.js + Express + MySQL
Frontend: React + Vite + CSS vanilla
Auth: OTP cho customer, Session-based cho admin
Libraries: axios, react-router-dom, nodemailer, fontawesome


🗄️ DATABASE SCHEMA (MySQL)
Database: football_field_management
12 bảng chính:

users - Người dùng (customer), phone_number unique, OTP auth
admins - Admin users với session-based auth, permissions JSON
admin_sessions - Session management cho admin
fields - Sân bóng (5vs5/7vs7/11vs11), price_per_hour, facilities JSON
bookings - Đặt sân, có start_time/end_time, status
booking_services - Dịch vụ kèm theo booking
services - Kho đồ uống/thức ăn/thiết bị, có stock
maintenance_schedules - Lịch bảo trì sân
matches - Kèo bóng đá, có allow_join cho ghép đội
match_participants - Người tham gia kèo
team_join_posts - Đăng tin ghép đội
otp_codes - Mã OTP có thời gian hết hạn


🔧 BACKEND STRUCTURE (Node.js + Express) - REFACTORED
football-field-management/
├── backend/
│   ├── config/
│   │   └── db.js                          # MySQL connection setup
│   │
│   ├── controllers/
│   │   ├── admin/                         # 🆕 ADMIN CONTROLLERS (TÁCH RA)
│   │   │   ├── dashboardController.js     # Dashboard stats, recent bookings
│   │   │   ├── bookingController.js       # Booking CRUD, filters, manual booking
│   │   │   ├── customerController.js      # Customer CRUD, stats, bulk actions
│   │   │   ├── fieldController.js         # Field CRUD, với booking timeline
│   │   │   └── revenueController.js       # Revenue reports, analytics
│   │   │
│   │   ├── authController.js              # Customer OTP authentication
│   │   ├── adminAuthController.js         # Admin session management
│   │   ├── fieldController.js             # Customer field APIs
│   │   ├── bookingController.js           # Customer booking APIs
│   │   ├── matchController.js             # Match/kèo CRUD APIs
│   │   ├── serviceController.js           # Services APIs
│   │   ├── maintenanceController.js       # Maintenance schedules
│   │   ├── userController.js              # Customer user management
│   │   ├── teamJoinController.js          # Team join posts
│   │   └── contactController.js           # Contact form
│   │
│   ├── models/
│   │   ├── Admin.js                       # Admin CRUD, sessions, dashboard stats
│   │   ├── Field.js                       # Field logic, availability checking
│   │   ├── Booking.js                     # Booking operations
│   │   ├── Match.js                       # Match CRUD với filtering
│   │   ├── MatchParticipant.js            # Join/leave matches
│   │   ├── Service.js                     # Services by category
│   │   ├── Maintenance.js                 # CRUD maintenance schedules
│   │   ├── User.js                        # User CRUD, createIfNotExist
│   │   ├── TeamJoin.js                    # Team join posts với filtering
│   │   └── Otp.js                         # OTP verification logic
│   │
│   ├── middlewares/
│   │   ├── adminAuth.js                   # Admin authentication & permissions
│   │   ├── authMiddleware.js              # Customer authentication
│   │   ├── errorMiddleware.js             # Error handling
│   │   └── validate.js                    # Input validation
│   │
│   ├── routes/
│   │   ├── admin/                         # 🆕 ADMIN ROUTES (TÁCH RA)
│   │   │   ├── index.js                   # Main admin router
│   │   │   ├── authRoutes.js              # Admin auth endpoints
│   │   │   ├── dashboardRoutes.js         # Dashboard endpoints
│   │   │   ├── bookingRoutes.js           # Booking management APIs
│   │   │   ├── customerRoutes.js          # Customer management APIs
│   │   │   ├── fieldRoutes.js             # Field management APIs
│   │   │   └── revenueRoutes.js           # Revenue reporting APIs
│   │   │
│   │   ├── authRoutes.js                  # Customer authentication
│   │   ├── adminRoutes.js                 # 🔄 Updated - points to admin/
│   │   ├── fieldRoutes.js                 # Customer field routes
│   │   ├── bookingRoutes.js               # Customer booking routes
│   │   ├── matchRoutes.js                 # Match/kèo routes
│   │   ├── serviceRoutes.js               # Services routes
│   │   ├── maintenanceRoutes.js           # Maintenance routes
│   │   ├── userRoutes.js                  # Customer user routes
│   │   ├── teamJoinRoutes.js              # Team join routes
│   │   └── contactRoutes.js               # Contact routes
│   │
│   ├── utils/
│   │   ├── sendOtp.js                     # OTP sending logic
│   │   └── logger.js                      # Logging utilities
│   │
│   ├── uploads/                           # File uploads storage
│   ├── index.js                           # Main server file
│   ├── package.json                       # Dependencies
│   └── .env                              # Environment variables

⚛️ FRONTEND STRUCTURE (React + Vite) - REFACTORED
├── frontend/
│   ├── public/
│   │   └── index.html
│   │
│   ├── src/
│   │   ├── admin/                         # 🔄 ADMIN UI (REFACTORED)
│   │   │   ├── assets/styles/
│   │   │   │   ├── admin.css              # General admin styles
│   │   │   │   ├── common.css             # Shared admin components
│   │   │   │   ├── dashboard-only.css     # Dashboard specific
│   │   │   │   ├── field-management.css   # Field management specific
│   │   │   │   ├── admin-booking.css      # Booking management specific
│   │   │   │   └── customer-management.css # 🆕 Customer management styles
│   │   │   │
│   │   │   ├── components/
│   │   │   │   ├── common/                # 🆕 SHARED ADMIN COMPONENTS
│   │   │   │   │   ├── ConfirmModal.jsx   # Confirmation dialogs
│   │   │   │   │   ├── Pagination.jsx     # Pagination component
│   │   │   │   │   ├── LoadingSpinner.jsx # Loading states
│   │   │   │   │   └── Toast.jsx          # Toast notifications
│   │   │   │   │
│   │   │   │   ├── customer/              # 🆕 CUSTOMER MANAGEMENT COMPONENTS
│   │   │   │   │   ├── CustomerStats.jsx  # Stats cards
│   │   │   │   │   ├── CustomerFilters.jsx # Search & filters
│   │   │   │   │   ├── CustomerTable.jsx  # Customer table
│   │   │   │   │   ├── CustomerModal.jsx  # Create/Edit modal
│   │   │   │   │   ├── CustomerDetailModal.jsx # View details
│   │   │   │   │   └── BulkActions.jsx    # Bulk operations
│   │   │   │   │
│   │   │   │   ├── booking/               # 🆕 BOOKING MANAGEMENT COMPONENTS (TÓM TẮT)
│   │   │   │   │   ├── BookingFilters.jsx # Existing filters component
│   │   │   │   │   ├── BookingTable.jsx   # Existing table component
│   │   │   │   │   └── BookingModal.jsx   # Existing modal component
│   │   │   │   │
│   │   │   │   ├── field/                 # 🆕 FIELD MANAGEMENT COMPONENTS (TÓM TẮT)
│   │   │   │   │   ├── FieldTimeline.jsx  # Field booking timeline
│   │   │   │   │   ├── FieldModal.jsx     # Create/Edit field
│   │   │   │   │   └── FieldStats.jsx     # Field statistics
│   │   │   │   │
│   │   │   │   ├── AdminLayout.jsx        # Main admin layout
│   │   │   │   ├── AdminLogin.jsx         # Admin login form
│   │   │   │   └── ProtectedAdminRoute.jsx # Route protection
│   │   │   │
│   │   │   ├── context/
│   │   │   │   └── AdminContext.jsx       # Admin state management
│   │   │   │
│   │   │   ├── hooks/                     # 🆕 ADMIN HOOKS
│   │   │   │   ├── useToast.js           # Toast notification hook
│   │   │   │   ├── usePagination.js      # Pagination logic
│   │   │   │   ├── useFilters.js         # Filter state management
│   │   │   │   └── useConfirm.js         # Confirmation dialog hook
│   │   │   │
│   │   │   ├── pages/
│   │   │   │   ├── AdminDashboard.jsx     # 🔄 Dashboard với stats
│   │   │   │   ├── AdminBookingManagement.jsx # 🔄 Booking management
│   │   │   │   ├── AdminFieldManagement.jsx # 🔄 Field management
│   │   │   │   └── AdminCustomerManagement.jsx # 🔄 REFACTORED Customer mgmt
│   │   │   │
│   │   │   └── services/                  # 🆕 ADMIN SERVICES (TÁCH RA)
│   │   │       ├── index.js              # Service exports
│   │   │       ├── baseService.js        # Base service class
│   │   │       ├── dashboardService.js   # Dashboard APIs
│   │   │       ├── bookingService.js     # Booking management APIs
│   │   │       ├── customerService.js    # Customer management APIs
│   │   │       ├── fieldService.js       # Field management APIs
│   │   │       ├── revenueService.js     # Revenue APIs
│   │   │       └── adminService.js       # 🔄 Updated legacy admin APIs
│   │   │
│   │   ├── assets/                        # Customer assets
│   │   │   ├── images/
│   │   │   └── styles/
│   │   │       ├── styles.css             # Customer main styles
│   │   │       └── common.css             # Shared customer styles
│   │   │
│   │   ├── components/                    # Customer components
│   │   │   ├── Header.jsx
│   │   │   ├── Footer.jsx
│   │   │   ├── LoginModal.jsx
│   │   │   ├── BookingSearchForm.jsx
│   │   │   ├── BookingModal.jsx
│   │   │   ├── FieldCard.jsx
│   │   │   ├── FieldStatus.jsx
│   │   │   ├── MatchCard.jsx
│   │   │   ├── CreateMatchModal.jsx
│   │   │   ├── ContactModal.jsx
│   │   │   ├── JoinTeamCard.jsx
│   │   │   ├── JoinTeamModal.jsx
│   │   │   ├── Features.jsx
│   │   │   └── ScrollToTop.jsx
│   │   │
│   │   ├── pages/                         # Customer pages
│   │   │   ├── Home.jsx
│   │   │   ├── Booking.jsx
│   │   │   ├── FindMatch.jsx
│   │   │   ├── JoinTeam.jsx
│   │   │   ├── Contact.jsx
│   │   │   └── UserProfile.jsx
│   │   │
│   │   ├── context/
│   │   │   └── AuthContext.jsx            # Customer auth context
│   │   │
│   │   ├── services/
│   │   │   ├── authService.jsx            # Customer authentication
│   │   │   ├── bookingService.jsx         # Customer booking APIs
│   │   │   ├── matchService.jsx           # Match/kèo APIs
│   │   │   └── teamJoinService.jsx        # Team join APIs
│   │   │
│   │   ├── App.jsx                        # Main app component
│   │   ├── index.jsx                      # App entry point
│   │   └── router.js                      # Route definitions
│   │
│   └── package.json                       # Frontend dependencies

🎯 CHỨC NĂNG ĐÃ HOÀN THIỆN
👤 User Features:

Authentication: OTP login qua phone/email
Booking System: Tìm sân trống, đặt sân với logic giá phức tạp
Match Finding: Tạo kèo, tìm kèo, tham gia đội
Team Join: Đăng tin cần người, tìm đội thiếu người
Profile Management: Cập nhật thông tin, xem thống kê
Contact: Gửi email liên hệ với Google Maps

🔧 Technical Features:

Real-time Field Status: Timeline view với overlap checking
Complex Pricing: Giá theo giờ và loại sân
Advanced Search: Filter theo nhiều tiêu chí
Responsive Design: Mobile-first, animations
Form Validation: Client & server validation
File Structure: MVC pattern, modular components

